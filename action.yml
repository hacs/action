name: "HACS Action"
description: "Repository validation action for HACS"
branding:
  icon: "terminal"
  color: "gray-dark"
inputs:
  ignore:
    description: "A space seperated list of ignored checks, for valid entries see README.md"
    required: false
    default: ""
  category:
    description: "The category of repository"
    required: true
  repository:
    description: "The full name of repository"
    required: false
  comment:
    description: "Post a comment to the PR with the result of the checks"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        bash "${{ github.action_path }}/helpers/cleanup"

    - shell: bash
      id: init
      run: |
        mkdir -p "${{ github.action_path }}/data"

        git clone --quiet --depth 1 https://github.com/hacs/integration.git "${{ github.action_path }}/hacs" > /dev/null

        if [ -n "${{ github.event.inputs.repository }}" ]; then
          repository="${{ github.event.inputs.repository }}"
        elif [ -n "${{ inputs.repository }}" ]; then
          repository="${{ inputs.repository }}"
        else
          repository="${{ github.repository }}"
        fi

        if [ -n "${{ github.event.inputs.category }}" ]; then
          category="${{ github.event.inputs.category }}"
        else
          category="${{ inputs.category }}"
        fi

        if [ "${{ github.repository }}" != "$repository" ]; then
          path="${{ github.action_path }}/repository"
          rm -rf "$path"
          git clone --quiet --depth 1 "https://github.com/$repository.git" "$path" > /dev/null
        else
          path="${{ github.workspace }}"
        fi

        bash "${{ github.action_path }}/helpers/input" repository "$repository"
        bash "${{ github.action_path }}/helpers/input" category "$category"

        bash "${{ github.action_path }}/helpers/info" "${{ github.token }}" "$repository" "${{ github.action_path }}" > /dev/null
        bash "${{ github.action_path }}/helpers/topics" "${{ github.token }}" "$repository" "${{ github.action_path }}" > /dev/null

        echo "::set-output name=repository::$repository"
        echo "::set-output name=category::$category"
        echo "::set-output name=path::$path"

        echo "$repository" > "${{ github.action_path }}/data/repository"
        echo "${{ github.repository }}" > "${{ github.action_path }}/data/action_repository"
        echo "$category" > "${{ github.action_path }}/data/category"
        echo "$path" > "${{ github.action_path }}/data/path"
        echo "${{ inputs.ignore }}" > "${{ github.action_path }}/data/ignore"
        echo "${{ github.token }}" > "${{ github.action_path }}/data/token"

    - shell: bash
      run: |
        bash "${{ github.action_path }}/run"

    - shell: bash
      run: bash "${{ github.action_path }}/helpers/wrapup" "${{ github.action_path }}"

    - shell: bash
      id: comment
      run: |
        if [ "${{ inputs.comment }}" == "true" ]; then
          python3 -m pip install -U wheel setuptools > /dev/null
          python3 -m pip install -U aiogithubapi > /dev/null
          python3 helpers/post_result.py
        fi

    - shell: bash
      run: |
        bash "${{ github.action_path }}/helpers/cleanup"
